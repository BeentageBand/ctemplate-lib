/*=====================================================================================*/
/**
 * map_gtest.cpp
 * author : puch
 * date : Oct 22 2015
 *
 * description : Any comments
 *
 */
/*=====================================================================================*/
#define CLASS_IMPLEMENTATION
/*=====================================================================================*
 * Project Includes
 *=====================================================================================*/
#include "gtest/gtest.h"
#include "gtest_template.h"
/*=====================================================================================* 
 * Standard Includes
 *=====================================================================================*/
#include <map>
/*=====================================================================================* 
 * Local X-Macros
 *=====================================================================================*/

/*=====================================================================================* 
 * Local Define Macros
 *=====================================================================================*/

/*=====================================================================================* 
 * Local Type Definitions
 *=====================================================================================*/
class Test_CMap : public ::testing::TestWithParam<Uint8_T>
{};
/*=====================================================================================* 
 * Local Function Prototypes
 *=====================================================================================*/

/*=====================================================================================* 
 * Local Object Definitions
 *=====================================================================================*/
const Uint8_T Map_Data[] =
{
	25,
	173,
	0,
	48,
	199,
	240,
	255
};

static std::map<Uint8_T, Uint8_T> MapCpp;
static Map_Uint8_Uint8_T CMap;
/*=====================================================================================* 
 * Exported Object Definitions
 *=====================================================================================*/

/*=====================================================================================* 
 * Local Inline-Function Like Macros
 *=====================================================================================*/

/*=====================================================================================* 
 * Local Function Definitions
 *=====================================================================================*/

/*=====================================================================================* 
 * Exported Function Definitions
 *=====================================================================================*/
TEST(Map,functionalities)
{
	CMap = Map_Uint8_Uint8();
}

TEST_P(Test_CMap, insert_n_find)
{
	EXPECT_EQ(MapCpp.empty(), CMap.vtbl->empty(&CMap));

	MapCpp.insert(GetParam());
	CMap.vtbl->insert(&CMap, &GetParam());

	EXPECT_EQ(*MapCpp.find(GetParam()), *CMap.vtbl->find(&CMap, &GetParam()));
}

TEST_P(Test_CMap, destroy)
{
	static bool_t once = true;
	if(once)
	{
		MapCpp.erase(MapCpp.begin(), MapCpp.end());
		CMap.vtbl->erase(&CMap, CMap.vtbl->begin(&CMap), CMap.vtbl->end(&CMap));
		once = false;

		_delete(&CMap);
	}
}

INSTANTIATE_TEST_CASE_P(Data, Test_CMap, ::testing::ValuesIn(Map_Data));
/*=====================================================================================* 
 * map_gtest.cpp
 *=====================================================================================*
 * Log History
 *
 *=====================================================================================*/
